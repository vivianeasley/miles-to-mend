(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))g(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&g(c)}).observe(document,{childList:!0,subtree:!0});function r(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function g(s){if(s.ep)return;s.ep=!0;const i=r(s);fetch(s.href,i)}})();const X=(o,e=4)=>{const r={};return o.forEach(([g,s])=>{const i=document.createElement("canvas"),c=i.getContext("2d"),t=50;i.width=t,i.height=t,c.imageSmoothingEnabled=!1,c.font=`${t}px sans-serif`,c.textAlign="center",c.textBaseline="middle",c.fillText(g,t/2,t/2);const p=t/e,v=document.createElement("canvas");v.width=p,v.height=p;const y=v.getContext("2d");y.imageSmoothingEnabled=!1,y.drawImage(i,0,0,p,p),c.clearRect(0,0,t,t),c.drawImage(v,0,0,p,p,0,0,t,t),c.drawImage(i,0,0);const b=c.getImageData(0,0,t,t),m=b.data;for(let C=0;C<m.length;C+=4){const T=m[C],S=m[C+1],L=m[C+2];T<30&&S<30&&L<30&&(m[C+3]=0)}c.putImageData(b,0,0);const w=i.toDataURL("image/png");r[s]=w}),r},H=()=>({sound:!1,flowers:0,mushrooms:0,turn:0,misses:0,score:0,page:"main",mapPopulated:!1,gridSize:4,selectedType:"mushroom",lockedX:[],lockedY:[],correct:[],incorrect:[]}),O=(o,e)=>({events:{play:()=>k("puzzle"),playWithSound:()=>{e.sound=!0,k("puzzle")},scores:()=>{k("scores")}}}),F=o=>{const e=Array(o).fill(null).map(()=>Array(o).fill("")),r=Array(o).fill(null).map(()=>Array(o).fill("")),g=[],s=Math.floor(Math.random()*(o*o/3))+o,i=o>=11?s+o:s;for(let c=0;c<i;c++){let t,a;do t=Math.floor(Math.random()*o),a=Math.floor(Math.random()*o);while(e[t][a]==="tree");e[t][a]="tree",r[t][a]="tree",g.push([t,a])}g.forEach(([c,t])=>{const a=[[0,-1],[-1,0],[1,0],[0,1]];for(let[p,v]of a){const y=c+p,b=t+v;$(y,b,o)&&e[y][b]===""&&Math.random()<.7&&(e[y][b]="mushroom")}});for(let c=0;c<o;c++)for(let t=0;t<o;t++)e[c][t]===""&&R(c,t,e,o)&&Math.random()<.7&&(e[c][t]="flower");return{playerSelections:r,board:e}};function R(o,e,r,g){const s=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];for(let[i,c]of s){const t=o+i,a=e+c;if($(t,a,g)&&r[t][a]==="tree")return!1}return!0}function $(o,e,r){return o>=0&&o<r&&e>=0&&e<r}const A=o=>document.querySelector(o);function E(o,e){const r=A(".stats-value.score"),g=A(".stats-value.misses");r.textContent=o,g.textContent=e}const Y=(o,e)=>{const r=document.getElementById("particleCanvas"),g=r.getContext("2d");let s;function i(m,w,C){return{x:m,y:w,image:C,size:Math.random()*20+10,speedY:Math.random()*-3-2,speedX:Math.random()*2-1,gravity:.1,opacity:1}}function c(m){m.speedY+=m.gravity,m.x+=m.speedX,m.y+=m.speedY,m.opacity-=.02,m.opacity<0&&(m.opacity=0)}function t(m){g.globalAlpha=m.opacity,g.drawImage(m.image,m.x,m.y,m.size,m.size),g.globalAlpha=1}const a=[];function p(m,w,C,T){const S=new Image;S.src=T,S.onload=()=>{for(let L=0;L<C;L++)a.push(i(m,w,S))}}function v(){g.clearRect(0,0,r.width,r.height);for(let m=a.length-1;m>=0;m--){const w=a[m];c(w),t(w),(w.y>r.height||w.opacity===0)&&a.splice(m,1)}s=requestAnimationFrame(v)}function y(){cancelAnimationFrame(s)}function b(m,w){m&&w?(r.width=m,r.height=w):(r.width=window.innerWidth,r.height=window.innerHeight)}return v(),{initParticles:p,stopParticles:y,setCanvasSize:b}},B=()=>{const o=[{note:"E5",duration:"sixteenth"},{note:"C5",duration:"sixteenth"},{note:"G4",duration:"sixteenth"}],e={C5:523.25,E5:659.25,G4:392,Rest:0},r={sixteenth:.25},g=.05,s=new(window.AudioContext||window.webkitAudioContext);function i(t,a,p){if(t===0)return;const v=s.createOscillator(),y=s.createGain();v.frequency.setValueAtTime(t,p),v.type="square";const b=.005,m=.01,w=.6,C=.02;y.gain.setValueAtTime(0,p),y.gain.linearRampToValueAtTime(1,p+b),y.gain.linearRampToValueAtTime(w,p+b+m),y.gain.setValueAtTime(w,p+a-C),y.gain.linearRampToValueAtTime(0,p+a),v.connect(y),y.connect(s.destination),v.start(p),v.stop(p+a)}function c(){let t=s.currentTime;o.forEach(a=>{const p=e[a.note],v=g*r[a.duration];p!==void 0&&(i(p,v,t),t+=v)})}return s.resume().then(()=>{console.log("AudioContext is ready for playback")}),{playCoinClinkSound:c}},D=(o,e)=>{const r=localStorage.getItem("scores"),{playCoinClinkSound:g}=B(),{gridSize:s,images:i}=e,{playerSelections:c,board:t}=F(s),{initParticles:a,stopParticles:p,setCanvasSize:v}=Y();function y(h){const d=Array(h[0].length).fill(0),u=Array(h.length).fill(0),n=Array(h.length).fill(0),f=Array(h[0].length).fill(0);for(let x=0;x<h.length;x++)for(let l=0;l<h[x].length;l++)h[x][l]==="flower"?(d[l]++,n[x]++):h[x][l]==="mushroom"&&(f[l]++,u[x]++);return{top:d,right:u,left:n,bottom:f}}const{top:b,right:m,left:w,bottom:C}=y(t);function T(){E(e.score,e.misses);const h=o.querySelector("#game-board");if(h){h.style.gridTemplateColumns=`50px repeat(${t[0].length}, 50px) 50px`,h.style.gridTemplateRows=`50px repeat(${t.length}, 50px) 50px`,h.innerHTML="";for(let d=-1;d<=t.length;d++)for(let u=-1;u<=t[0].length;u++){const n=document.createElement("div");if(n.classList.add("cell"),(e.lockedY.includes(u+"")||e.lockedX.includes(d+""))&&n.classList.add("disabled"),e.correct.some(f=>f[0]===d&&f[1]===u)&&n.classList.add("correct"),e.incorrect.some(f=>f[0]===d&&f[1]===u)&&n.classList.add("incorrect"),u===-1&&d===-1){const f=document.createElement("img");f.src=i.flower3,f.classList.add("tile-image"),n.appendChild(f)}else if(u===t[0].length&&d===t.length){const f=document.createElement("img");f.src=i.mushroom,f.classList.add("tile-image"),n.appendChild(f)}else if(u===t[0].length&&d===-1)n.classList.add("clear-cell");else if(u===-1&&d===t.length)n.classList.add("clear-cell");else if(d===-1&&u>=0&&u<t[0].length)n.classList.add("header-cell"),n.dataset.event="headerCellClick",n.dataset.payload=`x--${u}`,n.textContent=b[u];else if(u===-1&&d>=0&&d<t.length)n.classList.add("header-cell"),n.dataset.event="headerCellClick",n.dataset.payload=`y--${d}`,n.textContent=w[d];else if(u===t[0].length&&d>=0&&d<t.length)n.classList.add("header-cell"),n.dataset.event="headerCellClick",n.dataset.payload=`y--${d}`,n.textContent=m[d];else if(d===t.length&&u>=0&&u<t[0].length)n.classList.add("header-cell"),n.dataset.event="headerCellClick",n.dataset.payload=`x--${u}`,n.textContent=C[u];else if(u>=0&&u<t[0].length&&d>=0&&d<t.length){n.setAttribute("data-x",u),n.setAttribute("data-y",d),n.dataset.event="cellClick";const f=document.createElement("img");t[d][u]==="tree"?(f.src=i.tree2,f.classList.add("tile-image"),n.appendChild(f),n.dataset.type="tree"):c[d][u]==="flower"?(f.src=i.flower3,f.classList.add("tile-image"),n.appendChild(f),n.dataset.type="flower"):c[d][u]==="mushroom"&&(f.src=i.mushroom,f.classList.add("tile-image"),n.appendChild(f),n.dataset.type="mushroom")}h.appendChild(n)}v(h.offsetWidth,h.offsetHeight)}}const S=h=>{const d=parseInt(h.target.getAttribute("data-x")),u=parseInt(h.target.getAttribute("data-y"));c[u][d]==="flower"||c[u][d]==="mushroom"?c[u][d]="":e.selectedType&&t[u][d]!=="tree"&&(c[u][d]=e.selectedType),T()},L=()=>{e.selectedType="flower",o.querySelector(".button.selected").classList.remove("selected"),o.querySelector(".button[data-event='flowerButton']").classList.add("selected")},q=()=>{e.selectedType="mushroom",o.querySelector(".button.selected").classList.remove("selected"),o.querySelector(".button[data-event='mushroomButton']").classList.add("selected")},z=(h,d)=>{const[u,n]=d.split("--"),{correct:f,incorrect:x}=W(c,t,u==="x"?"y":"x",parseInt(n));u==="y"&&!e.lockedX.includes(n)&&e.lockedX.push(n),u==="x"&&!e.lockedY.includes(n)&&e.lockedY.push(n),e.misses+=x,e.score+=f,e.misses>=13&&(e.gridSize=4,e.lockedX=[],e.lockedY=[],e.correct=[],e.incorrect=[],p(),k("lose"),l(),e.score=0,e.misses=0,e.selectedType="mushroom",E(e.score,e.misses)),(e.lockedX.length===t.length||e.lockedY.length===t[0].length)&&e.gridSize===13&&e.misses<13&&(e.gridSize=4,e.lockedX=[],e.lockedY=[],e.correct=[],e.incorrect=[],e.selectedType="mushroom",l(),p(),k("win")),(e.lockedX.length===t.length||e.lockedY.length===t[0].length&&e.misses<13)&&(e.gridSize++,e.lockedX=[],e.lockedY=[],e.correct=[],e.incorrect=[],e.selectedType="mushroom",p(),k("next")),T();function l(){const N=[...r?JSON.parse(r):[],e.score];localStorage.setItem("scores",JSON.stringify(N))}};function W(h,d,u,n){let f=0,x=0;if(u==="x")for(let l=0;l<d[0].length;l++)e.lockedY.includes(l.toString())||(h[n][l]===d[n][l]?(h[n][l]==="flower"||h[n][l]==="mushroom")&&(f++,e.correct.push([n,l]),setTimeout(()=>{a(l*60+60,n*60+60,100,i.star),e.sound&&g()},l*50)):(h[n][l]==="flower"||h[n][l]==="mushroom"||h[n][l]==="")&&(setTimeout(()=>{a(l*60+60,n*60+60,100,i.fail)},l*30),e.incorrect.push([n,l]),x++));else if(u==="y")for(let l=0;l<d.length;l++)e.lockedX.includes(l.toString())||(h[l][n]===d[l][n]?(h[l][n]==="flower"||h[l][n]==="mushroom")&&(f++,e.correct.push([l,n]),setTimeout(()=>{a(n*60+60,l*60+60,100,i.star),e.sound&&g()},l*50)):(h[l][n]==="flower"||h[l][n]==="mushroom"||h[l][n]==="")&&(setTimeout(()=>{a(n*60+60,l*60+60,100,i.fail)},l*50),e.incorrect.push([l,n]),x++));return{correct:f,incorrect:x}}return T(),{events:{flowerButton:L,mushroomButton:q,headerCellClick:z,cellClick:S}}},V=(o,e)=>{const r=()=>k("puzzle"),g=document.querySelector(".next-level");return g.textContent=e.gridSize-3,{events:{continueSearch:r}}},G=[["🌳","tree2"],["🌺","flower3"],["🍄","mushroom"],["⭐️","star"],["🌟","star2"],["✨","star3"],["🌙","star4"],["🔴","fail"]],J=(o,e)=>{const r=()=>k("main"),{playCoinClinkSound:g}=B(),s=o.querySelector(".final-score");s.textContent=e.score;let i;const{initParticles:c,stopParticles:t,setCanvasSize:a}=Y();a();function p(){for(let y=0;y<10;y++){const b=Math.random()>.5?e.images.star:e.images.star2;c(Math.random()*window.innerWidth,Math.random()*window.innerHeight,10,b)}if(e.sound)for(let y=0;y<5;y++)setTimeout(()=>{g()},y*100);i=setTimeout(p,2e3)}return p(),{events:{continueSearch:()=>{k("puzzle"),clearTimeout(i),t(),e.score=0,e.misses=0,E(e.score,e.misses)},backToMain:r}}},j=()=>({events:{continueSearch:()=>k("puzzle"),backToMain:()=>k("main")}}),U=()=>{const o=()=>k("main"),e=localStorage.getItem("scores"),r=JSON.parse(e),g=r?[...new Set(r)].sort((s,i)=>i-s):[];return document.querySelector(".scores-list").innerHTML=g.map(s=>`<li><h3>${s}</h3></li>`).join(""),{events:{backToMain:o}}},I=A("#app"),M=H(),K=X(G);M.images=K;M.vWidth=Math.max(document.documentElement.clientWidth||0,window.innerWidth||0);M.vHeight=Math.max(document.documentElement.clientHeight||0,window.innerHeight||0);M.xOrigin=Math.floor(7e3/2);M.yOrigin=Math.floor(7e3/2);let P;function Q(o){const e=document.querySelector(".stars-moon");for(let s=0;s<o;s++)r(Math.random()*window.innerWidth,Math.random()*(window.innerHeight/1.5),Math.random()*100/5,M.images.star3);g(Math.random()*window.innerWidth,Math.random()*(window.innerHeight/1.5),50,M.images.star4);function r(s,i,c,t){const a=document.createElement("div");a.classList.add("star"),a.style.left=`${s}px`,a.style.top=`${i}px`,a.style.width=`${c}px`,a.style.height=`${c}px`,a.style.backgroundImage=`url(${t})`,a.style.animation=`twinkle ${Math.random()*2+8}s infinite`,e.appendChild(a)}function g(s,i,c,t){const a=document.createElement("div");a.classList.add("moon"),a.style.left=`${s}px`,a.style.top=`${i}px`,a.style.width=`${c}px`,a.style.height=`${c}px`,a.style.backgroundImage=`url(${t})`,e.appendChild(a)}}Q(20);const Z={main:{html:`
    <div class="general-container">
      <h2>Miles to Mend</h2>
      <h4>Goal: Find all mushrooms and flowers correctly over 9 levels without getting 13 incorrect answers.</h4>
      <p><button class="unstyled-button" data-event="play">Play</button> <button class="unstyled-button" data-event="playWithSound">Play With Sound</button> <button class="unstyled-button" data-event="scores">Hi Scores</button></p>
      <p>
      <h4>Rules:</h4>
      <ul>
        <li>Collect your ingredients by selecting the ingredient tab (mushroom or flower) and clicking an empty square on the board.</li>
        <li>The numbers along the borders show how many mushrooms and flowers to include in each row and column. Bottom and right show how many mushrooms. Top and left show how many flowers.</li>
        <li>Flowers need sun: they must not be placed next to trees.</li>
        <li>Mushrooms need shade: they must be placed next to trees.</li>
        <li>To remove an ingredient from the board, click on it.</li>
        <li>When you've finished collecting, click a border number to score that row or column.</li>
        <li>When all spaces on the grid are scored, if you have fewer than 13 incorrect placements you progress to the next level.</li>
        <li>Beat 9 levels to win!</li>
      </ul>
      <p>A game by <a href="https://github.com/vivianeasley">Vivian Easley</a></p>
      </p>
    </div>
    `,funct:O},puzzle:{html:`
    <div class="puzzle-container"><canvas id="particleCanvas"></canvas><div id="game-board"></div></div>
    <div class="button-container"> 
      <button class="button unstyled-button" data-event="flowerButton"><img src="${M.images.flower3}" class="button-image" /> Flower</button>
      <button class="button unstyled-button selected" data-event="mushroomButton"><img src="${M.images.mushroom}" class="button-image" /> Mushroom</button>
    </div>`,funct:D},next:{html:`
    <div class="general-container">
      <h2>Continue your search?</h2>
      <p>Next Level: <span class="next-level"></span></p>
      <button class="continue unstyled-button" data-event="continueSearch">Continue</button>
    </div>
    `,funct:V},win:{html:`
    <canvas id="particleCanvas"></canvas>
    <div class="general-container">
      <h2>You win</h2>
      <h3>Your final score is <span class="final-score"></span>!</h3>
      <p>
        <button class="unstyled-button" data-event="backToMain">Back to Main</button>
      </p>
      <p>
        <button class="continue unstyled-button" data-event="continueSearch">Play again</button>
      </p>
    </div>
    `,funct:J},lose:{html:`
    <div class="general-container">
      <h2>You lose</h2>
      <p>
        <button class="unstyled-button" data-event="backToMain">Back to Main</button>
      </p>
      <p>
        <button class="continue unstyled-button" data-event="continueSearch">Play again</button>
      </p>
    </div>`,funct:j},scores:{html:`
    <div class="general-container">
      <p>
        <button class="unstyled-button" data-event="backToMain">Back to Main</button>
      </p>
      <h2>High Scores</h2>
      <p>
        <ol class="scores-list">
        </ol>
      </p>
    </div>`,funct:U}};function k(o){M.page=o;const e=Z[o];I.innerHTML=e.html,setTimeout(()=>{const r=e.funct(I,M);r!=null&&r.events&&(P=r.events)},0)}I.addEventListener("click",o=>{if(P[o.target.dataset.event]){const e=o.target.dataset.payload?o.target.dataset.payload:null;P[o.target.dataset.event](o,e)}});function _(o){const e=document.getElementById("favicon");e&&(e.href=o)}_(M.images.star4);k("main");
